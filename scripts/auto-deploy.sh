#!/bin/bash

# 🚀 Auto-Deploy Script for Cerebrum Biology Academy
# This script ensures your work is never lost by automatically:
# 1. Saving changes to Git
# 2. Pushing to GitHub
# 3. Triggering Vercel deployment
# 4. Verifying deployment success

set -e

echo "🚀 Starting Auto-Deploy Process..."
echo "=================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo -e "${RED}❌ Error: Not in project root directory${NC}"
    exit 1
fi

# Step 1: Build and test locally
echo -e "${BLUE}🏗️ Step 1: Building project locally...${NC}"
npm run build || {
    echo -e "${RED}❌ Build failed! Fix errors before deploying.${NC}"
    exit 1
}
echo -e "${GREEN}✅ Build successful${NC}"

# Step 2: Git operations
echo -e "${BLUE}📝 Step 2: Saving to Git...${NC}"

# Check for changes
if git diff-index --quiet HEAD --; then
    echo -e "${YELLOW}⚠️ No changes detected${NC}"
else
    # Add all changes
    git add .

    # Create commit with timestamp
    COMMIT_MSG="🚀 Auto-Deploy: $(date '+%Y-%m-%d %H:%M:%S')

    ✨ Changes deployed:
    - Brand visibility improvements
    - UI/UX enhancements
    - Bug fixes and optimizations

    🔧 Generated by auto-deploy script"

    git commit -m "$COMMIT_MSG"
    echo -e "${GREEN}✅ Changes committed${NC}"
fi

# Step 3: Push to GitHub
echo -e "${BLUE}📤 Step 3: Pushing to GitHub...${NC}"
git push origin main || {
    echo -e "${RED}❌ Failed to push to GitHub${NC}"
    exit 1
}
echo -e "${GREEN}✅ Pushed to GitHub${NC}"

# Step 4: Trigger GitHub Actions
echo -e "${BLUE}🎯 Step 4: Triggering deployment...${NC}"
echo "GitHub Actions will automatically deploy your changes"
echo "Check progress at: https://github.com/DrShekhar/-cerebrum-biology-academy-website/actions"

# Step 5: Wait and verify
echo -e "${BLUE}⏳ Step 5: Waiting for deployment...${NC}"
echo "Waiting 60 seconds for deployment to complete..."

for i in {60..1}; do
    echo -ne "${YELLOW}⏳ ${i}s remaining...\r${NC}"
    sleep 1
done
echo ""

# Step 6: Verify deployment
echo -e "${BLUE}🔍 Step 6: Verifying deployment...${NC}"
SITE_URL="https://cerebrum-biology-academy-website.vercel.app"

STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$SITE_URL")
if [ "$STATUS" = "200" ]; then
    echo -e "${GREEN}✅ Deployment successful!${NC}"
    echo -e "${GREEN}🌐 Your site is live at: $SITE_URL${NC}"

    # Check for brand visibility
    if curl -s "$SITE_URL" | grep -q "Cerebrum"; then
        echo -e "${GREEN}✅ Brand visibility confirmed${NC}"
    else
        echo -e "${YELLOW}⚠️ Brand check inconclusive (may need manual verification)${NC}"
    fi
else
    echo -e "${RED}❌ Site returned status: $STATUS${NC}"
    echo -e "${YELLOW}⚠️ Check Vercel dashboard for deployment status${NC}"
fi

echo ""
echo "🎉 Auto-Deploy Complete!"
echo "=========================="
echo -e "${GREEN}✅ Your work is safely deployed!${NC}"
echo ""
echo "🔗 Quick Links:"
echo "   🌐 Live Site: $SITE_URL"
echo "   📊 GitHub Actions: https://github.com/DrShekhar/-cerebrum-biology-academy-website/actions"
echo "   ⚙️ Vercel Dashboard: https://vercel.com/dashboard"
echo ""
echo -e "${BLUE}💡 Tip: Run this script anytime with: ${NC}./scripts/auto-deploy.sh"